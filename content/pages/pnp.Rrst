Print-and-Play PDFs
===================

:date: 2019-03-27
:modified: 2025-04-03
:tags: print-and-play

.. include:: ../../links.rst

.. contents::

Print-and-Play Piecepacks
-------------------------

piecepackr_ can generate Print & Play layouts for the piecepack_ game system via the ``save_print_and_play()`` function.
This page collects a number of such generated layouts along links to the relevant `Print & Play demos`_ that contain the source code for each of these piecepacks' configurations_.  

The **Cutlines** layouts have pieces with thin borders designed to be cut out with scissors (or other tools).  These layouts are compact and contain more game pieces.  The pieces in the **Crop marks w/bleed** layouts lack borders and instead feature a bleed zone and crop marks.  These are designed to be cut out with more advanced crafting tools and techniques but make it easier for the crafter to control the final quality of the build.  

.. {r setup, echo=FALSE}
source("../../set_knitr_opts.R")
set_opts_chunk("pages-pnp")
knitr::opts_chunk$set(fig.process = fig_process(date_created = "2021"))
.. ..

.. {r save_print_and_play, echo=FALSE}
library("piecepackr")
library("grid")
RData_files <- list.files("../tmp", pattern="RData", full.names=TRUE)
ee <- new.env()
for (ff in RData_files) { 
    load(ff, envir=ee) 
}
for (name in sort(names(ee))) {
    ee[[name]]$cache$reset()
}
save(list=names(ee), file="../share/demo_cfgs.RData", envir=ee)
.. ..

.. {r table, echo=FALSE, results='asis'}
# cutlines
cfg_names <- grep("_cutlines$", sort(names(ee)), value = TRUE)
titles <- sapply(cfg_names, function(x) {tt <- ee[[x]]$title; ifelse(is.null(tt), "", tt)})
letter_urls <- sprintf("{static}/share/pnp/%s_letter.pdf", cfg_names)
A4_urls <- sprintf("{static}/share/pnp/%s_A4.pdf", cfg_names)
base <- gsub("[0-9]*_cutlines", "", cfg_names)
cfg_base <- gsub("_cutlines", "", cfg_names)
cap <- function(s) { paste0(toupper(substring(s, 1, 1)), substring(s, 2)) }
demo_links <- sprintf("{filename}/Articles/%s_pnp.rst#%s", base, cfg_base)
df <- data.frame(Title=rst_link(demo_links, titles), 
                 Cutlines=paste(rst_link(letter_urls, "letter"), "/", rst_link(A4_urls, "A4")),
                 stringsAsFactors=FALSE)

# bleed
cfg_names <- grep("_bleed$", sort(names(ee)), value = TRUE)
titles <- sapply(cfg_names, function(x) {tt <- ee[[x]]$title; ifelse(is.null(tt), "", tt)})
letter_urls <- sprintf("{static}/share/pnp/%s_letter.pdf", cfg_names)
A4_urls <- sprintf("{static}/share/pnp/%s_A4.pdf", cfg_names)
base <- gsub("[0-9]*_bleed", "", cfg_names)
cfg_base <- gsub("_bleed", "", cfg_names)
cap <- function(s) { paste0(toupper(substring(s, 1, 1)), substring(s, 2)) }
demo_links <- sprintf("{filename}/Articles/%s_pnp.rst#%s", base, cfg_base)
cmwb <- paste(rst_link(letter_urls, "letter"), "/", rst_link(A4_urls, "A4"))
df_b <- data.frame(Title=rst_link(demo_links, titles),
                   `Crop marks w/ bleed`=cmwb,
                   stringsAsFactors=FALSE, check.names = FALSE)
df <- dplyr::left_join(df, df_b, by = "Title")
df[, 3] <- ifelse(is.na(df[, 3]), "", df[, 3])

rst_list_table(df, title="Downloadable Print-and-Play PDFs", widths="60, 15, 25")
.. ..

.. {r animation, results='hide', message=FALSE, echo=FALSE}
library("animation")
library("grid")
library("piecepackr")
cfgs <- new.env()
load("../share/demo_cfgs.RData", envir=cfgs)
draw_demos <- function(cfgs) {
    cfg_names <- sort(names(cfgs))
    cfg_names <- grep("_cutlines$", cfg_names, value = TRUE)
    for (nn in cfg_names) {
        grid.newpage()
        text <- sprintf("grid.piece('preview_layout', cfg=%s)", nn)
        grid.text(text, y=0.94, gp=gpar(fontsize=16, fontface="bold"))
        pushViewport(viewport(y=6/14, height=inch(6), width=inch(6)))
        grid.piece("preview_layout", cfg=cfgs[[nn]])
        popViewport()
    }
}
saveGIF({draw_demos(cfgs)}, movie.name="pnp-previews.gif",
    ani.height=540, ani.width=480, ani.res=80, ani.dev="png", ani.type="png")
.. ..

.. {r move, echo=FALSE}
xmpdf::set_xmp(update(xmp, date_created = "2021", description = "Previews of the print-and-play piecepacks"),
               "pnp-previews.gif")
invisible(file.rename('pnp-previews.gif', '../images/knitr/pnp-previews.gif'))
.. ..

.. figure:: {static}/images/knitr/pnp-previews.gif
    :alt: Animation of previews of various piecepacks
    :align: center

    Previews of the print-and-play piecepacks

Print-and-Play 4x6 Photo Storage Box Jackets
--------------------------------------------

pnpmisc_ can generate Print & Play layouts for 4x6 photo storage box jackets via the ``pdf_create_jacket()`` function.
sbgjackets_ contains the code for some pre-made jackets.

.. {r save_jackets, echo=FALSE, results='asis'}
library("sbgjackets", quietly = TRUE)
games <- c("dominoes", "nestorgames", "storage")
titles <- c("(Double-6, Double-9, and Double-12) Domino Jackets",
            "Shibumi Jacket",
            "Misc. Game Bit Jackets")
letter_urls <- sprintf("{static}/share/pnp/sbgj_%s_letter.pdf", games)
A4_urls <- sprintf("{static}/share/pnp/sbgj_%s_a4.pdf", games)
for (paper in c("letter", "a4")) {
    sbgj_dominoes_all(sprintf("../share/pnp/sbgj_dominoes_%s.pdf", paper), paper = paper)
    # sbgj_looney_pyramids_all(sprintf("../share/pnp/sbgj_looney_pyramids_%s.pdf", paper), paper = paper)
    sbgj_nestorgames_all(sprintf("../share/pnp/sbgj_nestorgames_%s.pdf", paper), paper = paper)
    sbgj_storage_all(sprintf("../share/pnp/sbgj_storage_%s.pdf", paper), paper = paper)
}
df <- data.frame(Title = titles,
                 File = paste(rst_link(letter_urls, "letter"), "/", rst_link(A4_urls, "A4")))
rst_list_table(df, title="Downloadable Print-and-Play PDFs", widths="70, 30")
.. ..
