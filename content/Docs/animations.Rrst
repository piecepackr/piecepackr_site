Animations
==========

:date: 2019-04-09
:modified: 2019-04-28

.. {r setup, echo=FALSE}
source("../../set_knitr_opts.R")
set_opts_chunk("demos-zzz") # Linked to external sites
library("piecepackr")
.. ..

.. include:: ../../links.rst

.. {r save_rdata, echo=FALSE}
RData_files <- list.files("../tmp", pattern="RData", full.names=TRUE)
ee <- new.env()
for (ff in RData_files) { 
    load(ff, envir=ee) 
}
save(list=names(ee), file="../share/demo_cfgs.RData", envir=ee)
.. ..

.. note:: Besides the ``animation`` package there are also several other R packages that can be used to help make an animation like the gifski_ and tweenr_ packages.  

Here we'll give a simple example using the `animation package`_ and piecepackr_'s API to build an animation showing a preview of each of the piecepack `configurations`_ stored on this website.  

.. {r animation, results='hide', message=FALSE}
library("animation")
library("grid")
library("piecepackr")
cfgs <- new.env()
load("../share/demo_cfgs.RData", envir=cfgs)
draw_demos <- function(cfgs) {
    for (nn in names(cfgs)) {
        grid.newpage()
        text <- sprintf("grid.piece('preview_layout', cfg=%s)", nn)
        grid.text(text, y=0.94, gp=gpar(fontsize=20, fontface="bold"))
        pushViewport(viewport(y=6/14, height=inch(6), width=inch(6)))
        grid.piece("preview_layout", cfg=cfgs[[nn]])
        popViewport()
    }
}
saveGIF({draw_demos(cfgs)}, movie.name="pnp-previews.gif",
    ani.height=540, ani.width=480, ani.res=80, ani.dev="png", ani.type="png")

.. {r move, echo=FALSE}
invisible(file.rename('pnp-previews.gif', '../images/knitr/pnp-previews.gif'))
.. ..

.. image:: {static}/images/knitr/pnp-previews.gif
    :alt: Animation of previews of various piecepacks
    :align: center

And here is a simple animation of a tic-tac-toe game:

.. {r tic-tac-toe, results='hide', message=FALSE}
draw_tictactoe_game_step <- function(n, cfg=list()) {
    grid.newpage()
    pushViewport(viewport(width=inch(4), height=inch(4)))
    if (n > 0) grid.piece("tile_back", cfg=cfg)
    if (n > 1) grid.piece("coin_back", suit=1, cfg=cfg, x=inch(2),y=inch(2))
    if (n > 2) grid.piece("coin_back", suit=2, cfg=cfg, x=inch(1),y=inch(2), angle=180)
    if (n > 3) grid.piece("coin_back", suit=1, cfg=cfg, x=inch(3),y=inch(1))
    if (n > 4) grid.piece("coin_back", suit=2, cfg=cfg, x=inch(1),y=inch(3), angle=180)
    if (n > 5) grid.piece("coin_back", suit=1, cfg=cfg, x=inch(1),y=inch(1))
    if (n > 6) grid.piece("coin_back", suit=2, cfg=cfg, x=inch(3),y=inch(3), angle=180)
    if (n > 7) grid.piece("coin_back", suit=1, cfg=cfg, x=inch(2),y=inch(1))
    if (n > 8) grid.segments(x0=inch(0.5), y0=inch(1), x1=inch(3.5), y1=inch(1), 
                             gp=gpar(col="blue", lwd=4))
    popViewport()
}
draw_tictactoe_game <- function(cfg=list()) {
    for (ii in 0:9) { draw_tictactoe_game_step(ii, cfg) }
}
saveGIF({draw_tictactoe_game(cfgs$dual1)}, movie.name="tictactoe.gif", 
    ani.height=480, ani.width=480, ani.res=120, ani.dev="png", ani.type="png")
.. ..
.. {r move2, echo=FALSE}
invisible(file.rename('tictactoe.gif', '../images/knitr/tictactoe.gif'))
.. ..

.. image:: {static}/images/knitr/tictactoe.gif
    :alt: Animation of a tic-tac-toe game
    :align: center

