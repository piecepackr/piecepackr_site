.. include:: links.rst

This is the associated website for the piecepackr_, ppgames_, piecenikr_, and tradgames_ R_ packages.  piecepackr_ is an R package designed to make configurable board game graphics. It can be used with the ggplot2_, grid_, rayrender_, rayvertex_, and rgl_ graphic systems to make board game diagrams_, board game animations_, and custom `Print & Play`_ layouts.  By default it is configured to make `piecepack game`_ diagrams_, animations_, and `Print & Play`_ layouts but can be configured to make graphics for `other game systems`_.  ppgames_ is an R_ package with functions for generating piecepack_ game graphics, rulesets, and books as well as functions to parse and visualize games recorded using "`Portable Piecepack Notation`_" format plus a Fuji-san solver.  piecenikr_ contains functions for visualizing `Looney Pyramids`_ games while tradgames_ contains functions for visualizing games played with traditional game systems (such as checkers sets).

.. {r piecepackr_animation, echo=FALSE, results='hide', message=FALSE}
library("animation")
library("grid")
examples <- list(
    chaturaji = "content/images/knitr/demos-chess-chaturaji-1.png",
    checkers = "content/images/knitr/games-checkers-breakthrough-1.png",
    dominoes = "content/images/knitr/games-dominoes-diagram-1.png",
    chinese = "content/images/knitr/games-dominoes-chinese-1.png",
    go = "content/images/knitr/games-go-grid-1.png",
    icehouse = "content/images/knitr/martian_chess_rgl.png",
    rayvertex = "content/images/knitr/rayvertex.png",
    tablut = "content/images/knitr/games-tablut-starting-diagram-1.png"
)

draw_examples <- function() {
    for (i in seq_along(examples)) {
        grid.newpage()
        grid.draw(piecepackr::file2grob(examples[[i]], distort=FALSE))
    }
}
saveGIF({draw_examples()}, movie.name="piecepackr_examples.gif",
        ani.height=600, ani.width=480, ani.res=120, ani.dev="png", ani.type="png")
invisible(file.rename('piecepackr_examples.gif', 'content/images/knitr/piecepackr_examples.gif'))
.. ..

.. figure:: {static}/images/knitr/piecepackr_examples.gif
    :alt: Some example graphics generated with piecepackr
    :align: center

    Some example graphics generated with piecepackr_

This website contains several articles of documentation on how to use these R_ packages as well as some relevant theory and resources plus several demos_ of the software in action.  It also contains the download links for several `Print & Play`_ pdfs of the piecepacks configured in the `Print & Play demos`_ that can be used to build your own piecepack_.  Here is a "Site Map" of the articles on this site:

.. contents:: Site Map

Also consider looking at each of the R packages built-in documentation:

.. list-table:: Links to pretty html rendering of R packages' built-in documentation
   :header-rows: 1

   * - Package
     - Type
   * - piecepackr_
     - `development <https://trevorldavis.com/R/piecepackr/dev>`__, `release <https://trevorldavis.com/R/piecepackr>`__
   * - ppgames_
     - `development <https://trevorldavis.com/R/ppgames/dev>`__, `preview <https://trevorldavis.com/R/ppgames>`__
   * - piecenikr_
     - `development <https://trevorldavis.com/R/piecenikr/dev>`__, `preview <https://trevorldavis.com/R/piecenikr>`__
   * - tradgames_
     - `development <https://trevorldavis.com/R/tradgames/dev>`__, `preview <https://trevorldavis.com/R/tradgames>`__

Docs
----

These are in depth articles on specific subjects of interest to piecepackr_ users including documentation of some of the key piecepackr_ and ppgames_ features:

{piecepackr} features
~~~~~~~~~~~~~~~~~~~~~

#. `Intro to piecepackr's API <{filename}/Articles/intro.rst>`_
#. `Configuration lists`_
#. `Custom grob functions`_
#. `3D projections <{filename}/Articles/projections.rst>`_

{ppgames} features
~~~~~~~~~~~~~~~~~~

#. `Animations`_
#. `Game starting arrangement functions <{filename}/Articles/game_starts.rst>`_
#. `Portable Piecepack Notation <{filename}/Articles/ppn.rst>`_
#. `Unicode piecepack diagrams <{filename}/Articles/unicode_diagrams.rst>`_

Demos
-----

Print-and-Play Demos
~~~~~~~~~~~~~~~~~~~~

These are the `Print & Play demos`_ which demonstrate the code used to generate the `Print & Play`_ pdfs found on this site:

#. `piecepackr's default piecepack <{filename}/Articles/default_pnp.rst>`_
#. `Dual piecepacks`_
#. `"Orthodox" (Anatomy of a Piecepack Standard) piecepack <{filename}/Articles/orthodox_pnp.rst>`_
#. `Daniel Ajoy's Dingbats suited piecepack <{filename}/Articles/dingbats_pnp.rst>`_
#. `Rainbow Deck suited piecepack <{filename}/Articles/default_pnp.rst>`_
#. `Chinese Zodiac ranked piecepack <{filename}/Articles/zodiac_cn_pnp.rst>`_
#. `Chess-ranked piecepacks <{filename}/Articles/chess_pnp.rst>`_
#. `Reversi-friendly piecepack <{filename}/Articles/reversi_pnp.rst>`_

Visualizations for Specific Piecepack Games
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

These are demonstrations of using piecepackr_ and ppgames_ to make visualizations for specific `piecepack games <{tag}ppgames>`__:

#. `Backgammon <{filename}/Articles/backgammon_game.rst>`_
#. Several `chess <{filename}/Articles/chess_pnp.rst>`_ variants
#. `Cribbage <{filename}/Articles/cribbage_game.rst>`_
#. `Everest <{filename}/Articles/everest_game.rst>`_
#. `Relativity <{filename}/Articles/relativity_game.rst>`_ (featuring a rank-colored piecepack)
#. `Tablut <{filename}/Articles/tablut_game.rst>`_
#. `Triactor <{filename}/Articles/jcd.rst>`_ (featuring the JCD piecepack)

Other Game Systems
~~~~~~~~~~~~~~~~~~

These are demonstrations of using piecepackr_ to make diagrams for `other game systems`_ besides the piecepack_.

#. `Checkers <{filename}/Articles/checkers.rst>`_
#. `Dominoes and standard 6-sided dice <{filename}/Articles/dominoes.rst>`_
#. `Go <{filename}/Articles/go.rst>`_
#. `Hexpack <{filename}/Articles/hexpack.rst>`_
#. `Looney Pyramids <{filename}/Articles/looney_pyramids.rst>`__
#. `Tak <{filename}/Articles/tak.rst>`_

Integrating with other piecepack art assets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Miscellaneous demonstrations to interact with outside piecepack art assets

#. `Generating alternative textures for James H. Vipond's piecepack components <{filename}/Articles/vipond_textures.rst>`_
#. `Triactor <{filename}/Articles/jcd.rst>`_ shows how to make a configuration using the images contained in the piecepack VASSAL module

Miscellaneous
-------------

Miscellaneous articles of potential interest of piecepackr_ users and piecepack (game) designers.

#. `Essential information sets of a piecepack <{filename}/Articles/essential.rst>`_
#. `Licenses FAQ <{filename}/Articles/licenses.rst>`_
#. `Unicode piecepack symbols <{filename}/Articles/unicode_symbols.rst>`_

